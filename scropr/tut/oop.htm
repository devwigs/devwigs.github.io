<div>

<p>As the <code>scropr</code> package is designed to be accessible to beginning programmers, it does not require the creation of classes. For more advanced programmers who prefer an object-oriented approach, the setup, drawing, and event-handling functions can be defined as methods in a <em>subclass</em> of <code>Sketch</code>.</p>

<p>In this approach, the sketch will assume its setup procedure is a method named <code>setup</code>; therefore you do not need to pass a setup function to the constructor. Here is the previous example implemented as a <code>Sketch</code> subclass...</p>

<pre class="Code">from scropr.sketch import Sketch, Sprite, BOUNCE
from scropr.image import Image
from pygame import KEYDOWN
from random import uniform, randint

<span class="Proto">class</span> Monsters(Sketch):

    <span class="Proto">def</span> setup(self):
        <span class="DocString">"Initialize the sketch"</span>
        self.setBackground("bg.png")
        self.image_monster = Image("costume.png")

    <span class="Proto">def</span> draw(self):
        <span class="DocString">"Draw one frame of the sketch"</span>

        <span class="Comment"># Redraw the sketch</span>
        self.simpleDraw()

        <span class="Comment"># Create sprites randomly</span>
        if randint(1, self.frameRate) == 1:
            velocity = uniform(-2, 2), uniform(-2, 2)
            posn = self.randPixel()
            h = self.height / 15 * uniform(0.5, 2)
            Sprite(self, self.image_monster, height=h, radius=True,
                orient=True, posn=posn, velocity=velocity, edge=BOUNCE)

        <span class="Comment"># Detect and remove colliding sprites</span>
        collisions = self.sprites.collisions()
        self.sprites.remove(collisions)

        <span class="Comment"># Make sprites follow mouse</span>
        for sprite in self.sprites:
            a = self.height / 10000
            sprite.accel = sprite.toward(self.mouseXY, a)

    <span class="Proto">def</span> keyDown(self, ev):
        <span class="DocString">"Remove all sprites"</span>
        if self.char == "r":
            self.sprites.empty()

    eventMap = {KEYDOWN: keyDown}


<span class="Comment"># Run the sketch</span>
Monsters().run()</pre>

<p>For simple sketches that do not use multiple drawing functions or event maps, it is not necessary to call the <code>animate</code> method: the sketch will assume that the method named <code>draw</code> is the drawing function and the class attribute <code>eventMap</code> is the event map dictionary.</p>

<p>If your program requires more than one drawing function or event map, the <code>animate</code> method should be used to select a current function and/or map. In this case, you should avoid using the names <code>draw</code> and <code>eventMap</code> in your class definition as these attributes will be overwritten whenever <code>animate</code> is called.</p>

</div>