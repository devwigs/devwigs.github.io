<article><h1>Sprite Collisions</h1>

<p>The program below creates five alien sprites with random spin and velocity...</p>

<pre class="Code">from random import uniform
from sc8pr import Sketch, Image, BOTH
from sc8pr.sprite import Sprite

def sprite(sk, img, i):
    <span class="Comment">"Create a sprite with random motion"</span>
    p = 50 + 100 * i, sk.center[1]
    s = uniform(-2, 2)
    v = uniform(-2, 2), uniform(-2, 2)
    return Sprite(img).config(pos=p, spin=s, vel=v,
        height=sk.height/5, bounce=BOTH)

def setup(sk):
    <span class="Comment">"Make a sketch with 5 aliens"</span>
    img = Image("alien.png")
    for i in range(5):
        sk += sprite(sk, img, i)

Sketch().play()</pre>

<p>You will notice when you run the program above that the sprites will frequent pass through each other...</p>
<p class="Center"><img class="Fit" src="img/overlap.png" alt="Image" style="border:1px solid black"/></p>
<p>For some programs, you may want the sprites to bounce off of each other as if they were physical objects. To do this, assign each sprite a <code>mass</code> value, and call the <code>physics</code> function from your sketch’s <code>ondraw</code> event handler. The changes are shown below in <span class="Hilite">blue</span>.</p>

<pre class="Code">from random import uniform
from sc8pr import Sketch, Image, BOTH
from sc8pr.sprite import Sprite, <span class="Hilite">physics</span>

def sprite(sk, img, i):
    <span class="Comment">"Create a sprite with random motion"</span>
    p = 50 + 100 * i, sk.center[1]
    s = uniform(-2, 2)
    v = uniform(-2, 2), uniform(-2, 2)
    return Sprite(img).config(pos=p, spin=s, vel=v,
        height=sk.height/5, bounce=BOTH, <span class="Hilite">mass=1</span>)

def setup(sk):
    <span class="Comment">"Make a sketch with 5 aliens"</span>
    <span class="Hilite">sk.bind(ondraw)</span>
    img = Image("alien.png")
    for i in range(5):
        sk += sprite(sk, img, i)

<span class="Hilite">def ondraw(sk, ev=None): physics(sk)</span>

Sketch().play()</pre>

<p>You may notice that sometimes the sprites appear to bounce before they actually make contact, and other times they start to overlap before bouncing. This is because the <code>physics</code> function uses a simple “elastic circles” collision model. Here is an image of the sprite with the circle used by the <code>physics</code> function superimposed. The circle is centred at the image center, and its radius is calculated by adding the image width and height, and then multiplying by 0.25.</p>
<p class="Center"><img src="img/hitCirc1.png" alt="Image" style="border:1px solid black"/></p>

<p>To get the most realistic collisions, the non-transparent part of the image should be properly centred, and the radius should be adjusted to match. Here is a modified image where we have added some transparency to the left and bottom of the image to better center the alien’s torso. We have also reduced the size of the circle by changing the sprite’s <code>radiusFactor</code> property from 0.25 (the default used to calculate the radius) to 0.20...</p>
<p class="Center"><img src="img/hitCirc2.png" alt="Image" style="border:1px solid black"/></p>

<p>Here is the program with the changes highlighted. Here is the <a href="img/alien_modified.png">modified image</a> to use with the program.</p>

<pre class="Code">from random import uniform
from sc8pr import Sketch, Image, BOTH
from sc8pr.sprite import Sprite, physics

def sprite(sk, img, i):
    <span class="Comment">"Create a sprite with random motion"</span>
    p = 50 + 100 * i, sk.center[1]
    s = uniform(-2, 2)
    v = uniform(-2, 2), uniform(-2, 2)
    return Sprite(img).config(pos=p, spin=s, vel=v,
        height=sk.height/5, bounce=BOTH, mass=1)

def setup(sk):
    <span class="Comment">"Make a sketch with 5 aliens"</span>
    sk.bind(ondraw)
    img = Image(<span class="Hilite">"alien_modified.png"</span>)
    for i in range(5):
        sk += sprite(sk, img, i)<span class="Hilite">.config(radiusFactor=0.2)</span>

def ondraw(sk, ev=None): physics(sk)

Sketch().play()</pre>

<p>If the “elastic circles” collision model is not appropriate for what you want your program to do, you can customize collision behaviour in your sketch’s or your sprites’ <code>ondraw</code> handlers. You can use the <a class="Code" href="javascript:goNode('collisions')">sc8pr.sprite.Collisions</a> class to help detect sprite collisions.</p>

</article>