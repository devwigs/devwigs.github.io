<article><h1>Graphic Class Hierarchy</h1>
<style type="text/css">

ul {
	list-style-type: square;
	padding-left:30px;
}

li span {cursor:pointer}

.Red {color:red}
.Blue {color:blue}

</style>

<p>Below is the <code>Graphic</code> “class hierarchy”. Classes shown in <span class="Comment">red</span> are “abstract” and should not be used to create graphics instances directly. Each class shown in  <span class="Blue">blue</span> also has a subclass of the same name suffixed with “Sprite” (such as <code>TextSprite</code>, <code>CircleSprite</code>, etc.) These subclasses, along with <code>Sprite</code>, are also subclasses of <code>BaseSprite</code>.</p>

<ul id="Hierarchy">
<li class="Red">Graphic</span></li>
<ul>
	<li class="Red" link="base">BaseSprite</li>
	<li>Image</li>
	<ul>
		<li class="Blue">Movie</li>
	</ul>
	<li>Canvas</li>
	<ul>
		<li link="scroll">ScrollCanvas [Experimental]</li>
		<li>Sketch</li>
		<ul><li link="scroll">ScrollSketch [Experimental]</li></ul>
		<li>Table</li>
		<li link="button_class">Button</li>
		<li link="menu_class">Menu</li>
		<li>Options</li>
		<ul><li>Radio</li></ul>
		<li>Slider</li>
		<li>Dialog</li>
		<ul>
			<li link="msgbox">MessageBox</li>
			<ul><li link="msgbox">NumInputBox</li></ul>
		</ul>
		<li link="progress">ProgressBar</li>
		<li link="ti_canvas">TextInputCanvas</li>
	</ul>
	<li link="sprite_class">CostumeImage</li>
	<ul>
		<li link="sprite_class">Sprite</li>
		<ul>
			<li link="robot_class">Robot</li>
			<li link="video_class">Video</li>
		</ul>
	</ul>
	<li link="render" class="Red">Renderable</li>
	<ul>
		<li class="Blue">Text</li>
		<ul><li link="ti_class">TextInput</li></ul>
		<li link="plot_class" class="Blue">Plot</li>
		<li>HSV</li>
	</ul>
	<li class="Red">Shape</li>
	<ul>
		<li link="circle">Circle</li>
		<li>Ellipse</li>
			<ul><li>Arc</li></ul>
		<li>Line</li>
		<li>Locus</li>
		<li class="Blue">Polygon</li>
		<ul>
			<li class="Blue">Arrow</li>
		</ul>
	</ul>
</ul>
</ul>
<script type="text/javascript">

function _hierarchy() {
	let li = $("#Hierarchy li");
	for (let i=0;i<li.length;i++) {
		let item = $(li[i]);
		item.html($("<span>").html(item.html()));
	};
	li.find("span").attr("title", "Click for details").click(function(ev) {
		var e = $(this);
		var a = e.closest("li").attr("link");
		if (a == null) a = e.html();
		if (a != "0") goNode(a.toLowerCase());
	});
}

_hierarchy();

</script>
</article>