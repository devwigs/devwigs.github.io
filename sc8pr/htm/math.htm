<article><h1><code>sc8pr.effect.math</code> Module</h1>

<p>This module defines an additional <a class="Hilite Code" href="javascript:goNode('effect')">Effect</a> subclass called <code>MathEffect</code> that is used to create effects that can be described by a mathematical function that defines the boundary between the opaque and transparent or color-filled sides of the image.</p>

<h4>Base Class</h4><div class="Indent">
<p><code>MathEffect</code>: This is an abstract base class for the effect classes defined in this module.</p>
</div>

<h4>Assignable Properties</h4><div class="Indent">
	<p><code class="Hilite">above</code>: Specifies whether the opaque portion of the image is above (<code>True</code>, default) or below (<code>False</code>) the boundary.</p>
	<p><code class="Hilite">amplitude</code>: Half the difference between the maximum and minimum values of the function over the appropriate domain. This property should be set by subclasses defining new effects, but should not be needed by most applications.</p>
	<p><code class="Hilite">invert</code>: If set to <code>True</code>, the image is rotated 90° counter-clockwise before applying the effect, and then rotated back 90° clockwise after the transformation is complete. This effectively swaps the <em>x</em>- and <em>y</em>-axes. The default is <code>False</code>.</p>
	<p><code class="Hilite">middle</code>: The midpoint between the maximum and minimum values of the function over the appropriate domain. This property should be set by subclasses defining new effects, but should not be needed by most applications.</p>
</div>

<h4>Constructors</h4><div class="Indent">
	<p><code><span class="Hilite">ClockHand</span>()</code>: Transition in or out with motion like the hands of a clock. The <code>clockwise</code> property can be changed from the default <code>True</code> to <code>False</code> to reverse the direction of the effect.</p>
	<p><code><span class="Hilite">Noise</span>(noise=0.15)</code>: Transition in or out with a random boundary.</p>
		<div class="Indent">
		<p><code class="Hilite">noise</code>: The intensity of the noise as a fraction of the image height; default <code>0.15</code>.</p>
		</div>
	<p><code><span class="Hilite">PaintDrops</span>(drops=48, **kwargs)</code>: Transition resembling falling paint drops on a wall.</p>
		<div class="Indent">
		<p><code class="Hilite">drops</code>: The number of drops.</p>
		</div>
	<p><code><span class="Hilite">Waves</span>(*args, **kwargs)</code>: A rising or ebbing wave effect produced by adding one or more sine functions. Instances have a <code>speed</code> property that determines the wave speed.</p>
		<div class="Indent">
		<p><code class="Hilite">args</code>: One or more 3-tuples describing the amplitude, wavelength, and phase shift of the waves. For example, an argument of <code>(0.03, -0.2, 0.1)</code> produces a wave with an amplitude equal to 3% of the image height, a wavelength 20% if the image width, and a phase shift of 10% of the width. The wavelength can be specified as positive or negative to obtain waves in both directions. As an alternative to tuples that explicitly determine the wave, the constuctor will accept a positive <code>int</code> and two <code>floats</code> as arguments to generate the waves randomly. The integer will indicate the number of sine waves and the floats will indicate the total amplitude of the combined waves and the average wavelength.</p>
		</div>
		
	<p><code><span class="Hilite">Wedge</span>(point=0.5, slope=2, **kwargs)</code>: Produces a wedge-shaped transition.</p>
		<div class="Indent">
		<p><code class="Hilite">point</code>: A value between 0 and 1 describing the <em>x</em> position of the wedge tip as a fraction of the image width.</p>
		<p><code class="Hilite">slope</code>: A <code>float</code> or <code>int</code> that determines the steepness of the wedge.</p>
		</div>
	<p><code><span class="Hilite">Wipe</span>(slope=True, **kwargs)</code>: .</p>
		<div class="Indent">
		<p><code class="Hilite">slope</code>: A <code>float</code> or <code>int</code> that determines the steepness of the wedge; will also accept a <code>bool</code> for a vertical boundary (infinte slope).</p>
		</div>
</div>

</article>
