<article><h1><code>sc8pr.misc.video</code> module</h1>
<p><b class="Comment">Experimental!</b></p>

<p>The <code>Video</code> class renders and animates videos from frame images that are stored in a ZIP archive. Videos stored this way will result in a larger file than an MP4 but will usually load faster, and the frames do not need to be read sequentially as they do for MP4 and similar formats.</p>

<p><code>VideoSprite</code> is subclass of <code>Video</code> that is also a <code>BaseSprite</code> subclass.</p>

<p>Use the <a class="Hilite Code" href="javascript:goNode('ffr')">sc8prx.ffmpeg.Reader</a> and <a class="Hilite Code" href="javascript:goNode('ffw')">sc8prx.ffmpeg.Writer</a> classes to transcode between FFmpeg-compatible formats like MP4 and a ZIP archive.</p>

<p>In addition to the attributes the <code>Video</code> class inherits from <a class="Hilite Code" href="javascript:goNode('sprite_class')">CostumeImage</a> and <a class="Hilite Code" href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile">ZipFile</a>, the following additional attributes are defined...</p>

<h4>Constructor</h4><div class="Indent">
	<p><code><span class="Hilite">Video</span>(zfile, **kwargs)</code></p>
		<div class="Indent">
		<p><code class="Hilite">zfile</code>: Path to the ZIP archive containing the frame images to be read.</p>
		<p><code class="Hilite">kwargs</code>: Additional arguments to be passed to the <code>ZipFile</code> constructor such as the <code>mode</code> and <code>compression</code>.</p>
		</div>
</div>

<pre class="Code" id="Ex1">from sc8pr import Sketch
from sc8pr.misc.video import Video

def setup(sk):
    mov = Video("movie.zip").config(read_alpha=True)
    sk.size = mov.size
    sk += mov.config(
        costumeTime = 2,                 <span class="Comment"># Sketch frames per video frame</span>
        costumeSequence = range(30, 90), <span class="Comment"># Video frame range to animate</span>
        pos = sk.center
    )

Sketch().play()</pre>

<h4>Read-Only Properties</h4><div class="Indent">
	<p><code class="Hilite">costumeList</code>: Returns the <code>Video</code> instance itself. The video has a <code>__getitem__</code> method which gives access to the costumes/frames in a list-like way using indices and slices.</p>
	<p><code class="Hilite">fps</code>: The nominal frame rate of the video.</p>
	<p><code class="Hilite">meta</code>: A dictionary of metadata.</p>
</div>

<h4>Assignable Properties</h4><div class="Indent">
	<p><code class="Hilite">read_alpha</code>: Specifies whether to convert image transparency when the costumes/frames are read: <code>True</code> supports transparency, <code>False</code> reads images as opaque, <code>None</code> (default) loads images without conversion.</p>
	<p><code class="Hilite">write_alpha</code>: Specifies whether to convert image transparency when the costumes/frames are saved: <code>True</code> supports transparency, <code>False</code> writes images as opaque, <code>None</code> (default) saves images without conversion.</p>
</div>

<h4>Instance Method</h4><div class="Indent">
	<p><code><span class="Hilite">__iadd__</span></code>: A pseudonym for <code>write</code>.</p>
	<p><code><span class="Hilite">__getitem__</span>(i)</code> → <code>Image</code> or <code>generator</code>: Returns the requested frame as an <code>Image</code>, or returns a generator for a sequence of frames if <code>i</code> is a slice.</p>
	<p><code><span class="Hilite">clip</span>(zfile, mode="x", start=0, frames=None)</code> → <code>self</code>: Save a subset of consecutive frames to a new ZIP archive.</p>
		<div class="Indent">
		<p><code class="Hilite">zfile</code>: The path to the ZIP file being created.</p>
		<p><code class="Hilite">mode</code>: The mode withwhich to open the file.</p>
		<p><code class="Hilite">start</code>: The index of the first frame number to save.</p>
		<p><code class="Hilite">frames</code>: The number of frames to save.</p>
		</div>
	<p><code><span class="Hilite">close</span>()</code> → <code>None</code>: Close the ZIP file containing the frame images.</p>
	<p><code><span class="Hilite">write</span>(*args, repeat=1)</code> → <code>self</code>: Append images by writing them to the <code>ZipFile</code>.</p>
		<div class="Indent">
		<p><code class="Hilite">args</code>: One or more <code>Image</code> instances to write, or other objects that can be converted to a <code>pygame.Surface</code>.</p>
		<p><code class="Hilite">repeat</code>: The number of times each frame is to be repeated during playback.</p>
		</div>
</div>

</article>