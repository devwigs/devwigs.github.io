<article><h1>Collision Physics</h1>

<p>The program below creates five alien sprites with random spin and velocity...</p>

<pre class="Code">from random import uniform
from sc8pr import Sketch, Image, BOTH
from sc8pr.sprite import Sprite

def sprite(sk, img, i):
    <span class="Comment">"Create a sprite with random motion"</span>
    p = 50 + 100 * i, sk.center[1]
    s = uniform(-2, 2)
    v = uniform(-2, 2), uniform(-2, 2)
    return Sprite(img).config(pos=p, spin=s, vel=v,
        height=sk.height/5, bounce=BOTH)

def setup(sk):
    <span class="Comment">"Make a sketch with 5 aliens"</span>
    img = Image("alien.png")
    for i in range(5):
        sk += sprite(sk, img, i)

Sketch().play()</pre>

<p>You will notice when you run the program above that the sprites will frequent pass through each other...</p>
<p class="Center"><img class="Fit" src="img/overlap.png" alt="Image" style="border:1px solid black"/></p>
<p>If you want the sprites to bounce off of each other rather than pass through, you can enable <code>sc8pr</code>’s  “collision physics”. To do this, assign each sprite a <code>mass</code> value, and call the <code>physics</code> function from your sketch’s <code>ondraw</code> event handler. The changes are shown below in <span class="Hilite">blue</span>.</p>

<pre class="Code">from random import uniform
from sc8pr import Sketch, Image, BOTH
from sc8pr.sprite import Sprite, <span class="Hilite">physics</span>

def sprite(sk, img, i):
    <span class="Comment">"Create a sprite with random motion"</span>
    p = 50 + 100 * i, sk.center[1]
    s = uniform(-2, 2)
    v = uniform(-2, 2), uniform(-2, 2)
    return Sprite(img).config(pos=p, spin=s, vel=v,
        height=sk.height/5, bounce=BOTH, <span class="Hilite">mass=1</span>)

def setup(sk):
    <span class="Comment">"Make a sketch with 5 aliens"</span>
    <span class="Hilite">sk.bind(ondraw)</span>
    img = Image("alien.png")
    for i in range(5):
        sk += sprite(sk, img, i)

<span class="Hilite">def ondraw(sk): physics(sk)</span>

Sketch().play()</pre>

<p></p>

</article>